{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\nexport const addProjectTask = (backlogId, project_task, history) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlogId}`, project_task);\n    history.push(`/projectBoard/${backlogId}`); //what we are saying is that everything went well...\n    //so whatever errors you might have had there from previous attempt (and therefore previous state)\n    //you can get rid of those\n\n    dispatch({\n      type: GET_ERRORS,\n      //payload is a conventional name\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      //payload is a conventional name\n      payload: err.response.data\n    });\n  }\n};\nexport const getBacklog = backlogId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlogId}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getProjectTask = (backlogId, ptId, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlogId}/${ptId}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\nexport const updateProjectTask = (backlogId, ptId, project_task, history) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlogId}/${ptId}`, project_task);\n    history.push(`/projectBoard/${backlogId}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {} //clearing out payload\n\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const deleteProjectTask = (backlogId, ptId) => async dispatch => {\n  if (window.confirm(`You are deleting Project Task ${ptId}, this action cannot be undone. Are you sure you would like to delete this project task?`)) {\n    await axios.delete(`/api/backlog/${backlogId}/${ptId}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: ptId\n    });\n  }\n};","map":{"version":3,"sources":["C:/PPMTool_Agile/ppmtool-react-client/src/actions/backlogActions.js"],"names":["axios","GET_ERRORS","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","addProjectTask","backlogId","project_task","history","dispatch","post","push","type","payload","err","response","data","getBacklog","res","get","getProjectTask","ptId","error","updateProjectTask","patch","deleteProjectTask","window","confirm","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\nexport const addProjectTask =\r\n  (backlogId, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.post(`/api/backlog/${backlogId}`, project_task);\r\n      history.push(`/projectBoard/${backlogId}`);\r\n      //what we are saying is that everything went well...\r\n      //so whatever errors you might have had there from previous attempt (and therefore previous state)\r\n      //you can get rid of those\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        //payload is a conventional name\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        //payload is a conventional name\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getBacklog = (backlogId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlogId}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask =\r\n  (backlogId, ptId, history) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/api/backlog/${backlogId}/${ptId}`);\r\n      dispatch({\r\n        type: GET_PROJECT_TASK,\r\n        payload: res.data,\r\n      });\r\n    } catch (error) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  };\r\n\r\nexport const updateProjectTask =\r\n  (backlogId, ptId, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.patch(`/api/backlog/${backlogId}/${ptId}`, project_task);\r\n      history.push(`/projectBoard/${backlogId}`);\r\n\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {}, //clearing out payload\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteProjectTask = (backlogId, ptId) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting Project Task ${ptId}, this action cannot be undone. Are you sure you would like to delete this project task?`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlogId}/${ptId}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: ptId,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}