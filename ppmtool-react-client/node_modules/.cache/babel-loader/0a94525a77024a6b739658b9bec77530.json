{"ast":null,"code":"var _jsxFileName = \"C:\\\\PPMTool_Agile\\\\ppmtool-react-client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"; //Create React App doesn't include page routing.\n//React Router is the most popular solution.\n// To add React Router in your application, run this in the terminal from the root directory of the application:\n// npm i -D react-router-dom\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\"; //allows us to hook up react with redux\n\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nconst jwtToken = localStorage.jwtToken; //if (local storage has token), keep it there as long as its valid\n\nif (jwtToken) {\n  setJWTToken(jwtToken); //set it again bcuz whenever we refresh the page the token is going away\n  //App.js is the meeting place for all components...every time we load anything from App.js all we're\n  //doing is get the jwt from localstorage, check if that token is there, and set it, set it yet again in the header\n\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n  const currentTime = Date.now() / 1000; //if token has expired, automatically logout logic\n\n  if (decoded_jwtToken.exp < currentTime) {\n    //handle logout\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n} //A class component must include the extends React.Component statement.\n// This statement creates an inheritance to React.Component, and gives your component access to React.Component's functions.\n// The class component also requires a render() method\n\n\nclass App extends Component {\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /*\r\n      We have to specifically tell React-Redux what store we want to use in our components.\r\n      We do this by rendering a <Provider> component around our entire <App>, and passing the Redux store\r\n      as a prop to <Provider>. After we do this once,\r\n      every component in the application will be able to access the Redux store if needs to.\r\n      */\n      React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Landing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/register\",\n        component: Register,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SecuredRoute, {\n        exact: true,\n        path: \"/dashboard\",\n        component: Dashboard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SecuredRoute, {\n        exact: true,\n        path: \"/addProject\",\n        component: AddProject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SecuredRoute, {\n        exact: true,\n        path: \"/updateProject/:id\",\n        component: UpdateProject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SecuredRoute, {\n        exact: true,\n        path: \"/projectBoard/:id\",\n        component: ProjectBoard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SecuredRoute, {\n        exact: true,\n        path: \"/addProjectTask/:id\",\n        component: AddProjectTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SecuredRoute, {\n        exact: true,\n        path: \"/updateProjectTask/:backlogId/:ptId\",\n        component: UpdateProjectTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      })))))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/PPMTool_Agile/ppmtool-react-client/src/App.js"],"names":["React","Component","Dashboard","Header","BrowserRouter","Router","Route","Switch","AddProject","Provider","store","UpdateProject","ProjectBoard","AddProjectTask","UpdateProjectTask","Landing","Register","Login","jwt_decode","setJWTToken","SET_CURRENT_USER","logout","SecuredRoute","jwtToken","localStorage","decoded_jwtToken","dispatch","type","payload","currentTime","Date","now","exp","window","location","href","App","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n//Create React App doesn't include page routing.\r\n//React Router is the most popular solution.\r\n// To add React Router in your application, run this in the terminal from the root directory of the application:\r\n// npm i -D react-router-dom\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\"; //allows us to hook up react with redux\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\n\r\nimport { logout } from \"./actions/securityActions\";\r\n\r\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\n//if (local storage has token), keep it there as long as its valid\r\nif (jwtToken) {\r\n  setJWTToken(jwtToken); //set it again bcuz whenever we refresh the page the token is going away\r\n  //App.js is the meeting place for all components...every time we load anything from App.js all we're\r\n  //doing is get the jwt from localstorage, check if that token is there, and set it, set it yet again in the header\r\n\r\n  const decoded_jwtToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_jwtToken,\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  //if token has expired, automatically logout logic\r\n  if (decoded_jwtToken.exp < currentTime) {\r\n    //handle logout\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\n//A class component must include the extends React.Component statement.\r\n// This statement creates an inheritance to React.Component, and gives your component access to React.Component's functions.\r\n// The class component also requires a render() method\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      /*\r\n      We have to specifically tell React-Redux what store we want to use in our components.\r\n We do this by rendering a <Provider> component around our entire <App>, and passing the Redux store\r\n  as a prop to <Provider>. After we do this once,\r\n   every component in the application will be able to access the Redux store if needs to.\r\n      */\r\n      <Provider store={store}>\r\n        <Router>\r\n          {\r\n            //enables us to have specific routes...wrap everything of our app in this tag\r\n          }\r\n          <div className=\"App\">\r\n            <Header />\r\n            {\r\n              //Public Routes\r\n            }\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            {\r\n              //the component that we wanna bring up when we route to this path\r\n            }\r\n\r\n            {\r\n              //Private Routes\r\n            }\r\n            <Switch>\r\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProject/:id\"\r\n                component={UpdateProject}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/projectBoard/:id\"\r\n                component={ProjectBoard}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/addProjectTask/:id\"\r\n                component={AddProjectTask}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProjectTask/:backlogId/:ptId\"\r\n                component={UpdateProjectTask}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}