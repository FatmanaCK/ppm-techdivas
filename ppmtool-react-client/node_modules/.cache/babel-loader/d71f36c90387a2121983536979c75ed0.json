{"ast":null,"code":"var _jsxFileName = \"C:\\\\PPMTool_Agile\\\\ppmtool-react-client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\")); // When creating a React component, the component's name MUST start with an upper case letter.\n// Display the App component in the \"root\" element:\n// ReactDOM.render() takes 2 arguments, HTML code and an HTML element\n// The purpose of the function ReactDOM.render() is to display the specified HTML code\n// (App in this case) inside the specified HTML element (root in this case)\n//But where will it be rendered?\n// In the index.html of the public folder, you'll notice a <div id=\"root\"></div> ...\n// This is where our React application will be rendered\n\n/*\r\nThe App component is rendered in a container called root\r\nex: ReactDOM.render(myElement, document.getElementById('root'));\r\n\r\nThe root node is the HTML element where you want to display the result.\r\n          It is like a container for content managed by React.\r\n          It does NOT have to be a <div> element and it does NOT have to have the id='root':\r\n*/\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/PPMTool_Agile/ppmtool-react-client/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEAF,QAAQ,CAACG,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACAH,eAAe","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n// When creating a React component, the component's name MUST start with an upper case letter.\r\n// Display the App component in the \"root\" element:\r\n\r\n// ReactDOM.render() takes 2 arguments, HTML code and an HTML element\r\n// The purpose of the function ReactDOM.render() is to display the specified HTML code\r\n// (App in this case) inside the specified HTML element (root in this case)\r\n//But where will it be rendered?\r\n// In the index.html of the public folder, you'll notice a <div id=\"root\"></div> ...\r\n// This is where our React application will be rendered\r\n/*\r\nThe App component is rendered in a container called root\r\nex: ReactDOM.render(myElement, document.getElementById('root'));\r\n\r\nThe root node is the HTML element where you want to display the result.\r\n          It is like a container for content managed by React.\r\n          It does NOT have to be a <div> element and it does NOT have to have the id='root':\r\n*/\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"]},"metadata":{},"sourceType":"module"}