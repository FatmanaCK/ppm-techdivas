{"ast":null,"code":"var _jsxFileName = \"C:\\\\PPMTool_Agile\\\\ppmtool-react-client\\\\src\\\\components\\\\Project\\\\UpdateProject.js\";\nimport React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\"; //This page renders on when you click on Update Project info\n//brought in template code from PPMToolDesign/ProjectForm.html\n//provided by Udemy instructor\n//changing all occurrences of \"class\" to \"className\" to consist with JSX syntax\n\nclass UpdateProject extends Component {\n  constructor() {\n    super(); //below object this.state takes the attributes of a project\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this); //best way to bind event handlers (i.e. in constructor)\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    //this is what receives the new props (basically the current state of the project) and displays each input field's value\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate\n    } = nextProps.project; //important or else value in each input field will be empty\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate\n    });\n  } //once this happens, and state is received by getProject...go to componentWillReceiveProps to set/update state to what it is instead of empty\n\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params; //match params contain the id that's passed in to the url as Route in App.js\n\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"display-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Update Project \", this.state.projectIdentifier), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"custom_input_border form-control form-control-lg \", {\n        \"is-invalid\": errors.projectName\n      }),\n      placeholder: \"Project Name\",\n      name: \"projectName\",\n      value: this.state.projectName,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }), errors.projectName && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, errors.projectName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \" form-control form-control-lg\",\n      placeholder: \"Unique Project ID\",\n      name: \"projectIdentifier\",\n      value: this.state.projectIdentifier,\n      onChange: this.onChange,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: classnames(\"custom_input_border form-control form-control-lg \", {\n        \"is-invalid\": errors.description\n      }),\n      placeholder: \"Project Description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }), errors.description && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, errors.description)), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      className: \"custom_input_border form-control form-control-lg\",\n      name: \"startDate\",\n      value: this.state.startDate,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"Estimated End Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      className: \"custom_input_border form-control form-control-lg\",\n      name: \"endDate\",\n      value: this.state.endDate,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"submit_button btn btn-primary btn-block mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}; //state.project.project\n//fetching from root reducer in index.js\n//second project is from projectReducer.js\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getProject,\n  createProject\n})(UpdateProject);","map":{"version":3,"sources":["C:/PPMTool_Agile/ppmtool-react-client/src/components/Project/UpdateProject.js"],"names":["React","Component","getProject","createProject","PropTypes","connect","classnames","UpdateProject","constructor","state","id","projectName","projectIdentifier","description","startDate","endDate","errors","onChange","bind","onSubmit","componentWillReceiveProps","nextProps","setState","project","componentDidMount","props","match","params","history","e","target","name","value","preventDefault","updateProject","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\n//This page renders on when you click on Update Project info\r\n//brought in template code from PPMToolDesign/ProjectForm.html\r\n//provided by Udemy instructor\r\n//changing all occurrences of \"class\" to \"className\" to consist with JSX syntax\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    //below object this.state takes the attributes of a project\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this); //best way to bind event handlers (i.e. in constructor)\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    //this is what receives the new props (basically the current state of the project) and displays each input field's value\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n    } = nextProps.project;\r\n\r\n    //important or else value in each input field will be empty\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n    });\r\n  }\r\n\r\n  //once this happens, and state is received by getProject...go to componentWillReceiveProps to set/update state to what it is instead of empty\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params; //match params contain the id that's passed in to the url as Route in App.js\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">\r\n                Update Project {this.state.projectIdentifier}\r\n              </h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\r\n                      \"custom_input_border form-control form-control-lg \",\r\n                      {\r\n                        \"is-invalid\": errors.projectName,\r\n                      }\r\n                    )}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\" form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\r\n                      \"custom_input_border form-control form-control-lg \",\r\n                      {\r\n                        \"is-invalid\": errors.description,\r\n                      }\r\n                    )}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"custom_input_border form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"custom_input_border form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"submit_button btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n//state.project.project\r\n//fetching from root reducer in index.js\r\n//second project is from projectReducer.js\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n"]},"metadata":{},"sourceType":"module"}